package Kodlama.io.Devs.Kodlama.io.Devs.business.concretes;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import Kodlama.io.Devs.Kodlama.io.Devs.business.abstracts.ProgrammingLanguageService;
import Kodlama.io.Devs.Kodlama.io.Devs.dataAccess.abstracts.ProgrammingLanguageRepository;
import Kodlama.io.Devs.Kodlama.io.Devs.entities.concretes.ProgrammingLanguage;

@Service
public class ProgrammingLanguageManager implements ProgrammingLanguageService {

	private ProgrammingLanguageRepository programmingLanguageRepository;

	@Autowired
	public ProgrammingLanguageManager(ProgrammingLanguageRepository programmingLanguageRepository) {

		this.programmingLanguageRepository = programmingLanguageRepository;

	}

	@Override
	public void add(ProgrammingLanguage programmingLanguage) {
		try {
			if(programmingLanguage.getName().isEmpty()){
				System.out.println("dil adı kısmını boş bıraktınız!!!!");
			}
			for(ProgrammingLanguage language:this.programmingLanguageRepository.getAll()) {
				if(language.getName().equals(programmingLanguage.getName())) {
					throw new  Exception("lütfen program dili zaten mevcuttur lutfen başka dil yazınız ");
					
				}
			}
			this.programmingLanguageRepository.add(programmingLanguage);
		} catch (Exception exception) {
			System.out.println(exception);
		}

	}

	@Override
	public void delete(ProgrammingLanguage programmingLanguage) {
		this.programmingLanguageRepository.delete(programmingLanguage);

	}

	@Override
	public List<ProgrammingLanguage> getAll() {

		return this.programmingLanguageRepository.getAll();
	}

	@Override
	public ProgrammingLanguage getId(int id) {

		return this.programmingLanguageRepository.getId(id);
	}


private boolean isExits() {
	for(ProgrammingLanguage language:this.getAll()) {
		return true;
	}
}
